---
version: '3.9'
services:
  traefik:
    image: traefik:2.9
    container_name: traefik
    command: # CLI arguments
      - --api=true
      - --log=true
      - --log.level=WARN # (Default: error) DEBUG, INFO, WARN, ERROR, FATAL, PANIC
      - --global.checkNewVersion=false
      - --global.sendAnonymousUsage=false
      - --entrypoints.http.address=:80
      - --entrypoints.http.http.redirections.entryPoint.to=https
      - --entrypoints.https.address=:443
      - --entrypoints.https.http.tls.certresolver=dns-cloudflare
      - --entrypoints.https.http.tls.domains[0].main=${DOMAIN}
      - --entrypoints.https.http.tls.domains[0].sans=*.${DOMAIN}
      # Allow these IPs to set the X-Forwarded-* headers - Cloudflare IPs: https://www.cloudflare.com/ips/
      - --entrypoints.https.forwardedHeaders.trustedIPs=173.245.48.0/20,103.21.244.0/22,103.22.200.0/22,103.31.4.0/22,141.101.64.0/18,108.162.192.0/18,190.93.240.0/20,188.114.96.0/20,197.234.240.0/22,198.41.128.0/17,162.158.0.0/15,104.16.0.0/13,104.24.0.0/14,172.64.0.0/13,131.0.72.0/22
      - --entrypoints.dns.address=:53/udp
      - --entrypoints.dnstcp.address=:53
      - --providers.docker=true
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.file.filename=/config/tls.yml
      - --certificatesResolvers.dns-cloudflare.acme.email=${EMAIL}
      - --certificatesResolvers.dns-cloudflare.acme.storage=/letsencrypt/acme.json
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.provider=cloudflare
      - --certificatesResolvers.dns-cloudflare.acme.dnsChallenge.resolvers=1.1.1.1:53,1.0.0.1:53
    security_opt:
      - no-new-privileges:true
    networks:
      proxy:
        ipv4_address: 10.0.0.2
    ports:
      - target: 53
        published: 53
        protocol: tcp
        mode: host
      - target: 53
        published: 53
        protocol: udp
        mode: host
      - target: 80
        published: 80
        protocol: tcp
        mode: host
      - target: 443
        published: 443
        protocol: tcp
        mode: host
    volumes:
      - letsencrypt:/letsencrypt
      - ./tls.yml:/config
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      CF_DNS_API_TOKEN: ${CF_DNS_API_TOKEN}
    labels:
      ## HTTP Routers
      - "traefik.http.routers.traefik.entrypoints=https"
      - "traefik.http.routers.traefik.rule=Host(`traefik.${DOMAIN}`)"
      - "traefik.http.routers.traefik.service=api@internal"
      - "traefik.http.routers.traefik.middlewares=secureHeaders"
      ## Middlewares
      - "traefik.http.middlewares.secureHeaders.headers.stsSeconds=31536000"
      - "traefik.http.middlewares.secureHeaders.headers.stsIncludeSubdomains=true"
      - "traefik.http.middlewares.secureHeaders.headers.stsPreload=true"
    restart: unless-stopped

  cloudflared-1:
    image: visibilityspots/cloudflared:latest
    container_name: cloudflared-1
    networks:
      proxy:
        ipv4_address: 10.0.0.3
    restart: unless-stopped

  cloudflared-2:
    image: visibilityspots/cloudflared:latest
    container_name: cloudflared-2
    networks:
      proxy:
        ipv4_address: 10.0.0.4
    restart: unless-stopped

  pihole:
    image: pihole/pihole:latest
    container_name: pihole
    hostname: pihole
    networks:
      proxy:
        ipv4_address: 10.0.0.5
    environment:
      PIHOLE_DNS_: 10.0.0.3#5054;10.0.0.4#5054
      ServerIP: 10.0.0.5
      VIRTUAL_HOST: pihole.${DOMAIN}
      DNSMASQ_LISTENING: eth0
      INTERFACE: eth0
      # PASSWORD:
      # TZ:
    volumes:
      - etc-pihole:/etc/pihole/
      - etc-dnsmasq.d:/etc/dnsmasq.d/
    dns:
      - 127.0.0.1
      - 1.1.1.1
    labels:
      ## HTTP Routers
      - "traefik.http.routers.pihole.entrypoints=https"
      - "traefik.http.routers.pihole.rule=Host(`pihole.${DOMAIN}`)"
      - "traefik.http.routers.pihole.service=pihole"
      - "traefik.http.routers.pihole.middlewares=addAdmin, secureHeaders"
      ## Middlewares
      - "traefik.http.middlewares.addAdmin.addprefix.prefix=/admin"
      ## HTTP Services
      - "traefik.http.services.pihole.loadbalancer.server.port=80"
      ## TCP Routers
      # DNS over TCP
      - "traefik.tcp.routers.dnstcp.entrypoints=dnstcp"
      - "traefik.tcp.routers.dnstcp.rule=HostSNI(`pihole.${DOMAIN}`)"
      - "traefik.tcp.routers.dnstcp.tls.certresolver=mytlschallenge"
      - "traefik.tcp.routers.dnstcp.service=dnstcp"
      ## TCP Services
      - "traefik.tcp.services.dnstcp.loadbalancer.server.port=53"
      ## UDP Routers
      - "traefik.udp.routers.dns.entrypoints=dns"
      - "traefik.udp.routers.dns.service=dns"
      ## UDP Services
      - "traefik.udp.services.dns.loadbalancer.server.port=53"
    restart: unless-stopped

networks:
  proxy:
    driver: bridge
    ipam:
      config:
        - subnet: 10.0.0.0/29

volumes:
  letsencrypt:
  etc-pihole:
  etc-dnsmasq.d:
